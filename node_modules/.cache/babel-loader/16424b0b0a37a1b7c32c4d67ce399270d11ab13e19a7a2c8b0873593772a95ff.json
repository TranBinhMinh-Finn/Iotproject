{"ast":null,"code":"var _jsxFileName = \"/Users/adam/Iotproject/src/contents/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [sensorData, setSensorData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch('/api/sensor-data');\n      const data = await response.json();\n      setSensorData(data);\n      setIsLoading(false);\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading sensor data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Sensor ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Temperature\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Humidity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: sensorData.map(sensor => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: sensor.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: sensor.temperature\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: sensor.humidity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this)]\n        }, sensor.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"CMtMV/THhfRe5KrcWE6VFcLc7sA=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Dashboard","sensorData","setSensorData","isLoading","setIsLoading","fetchData","response","fetch","data","json","map","sensor","id","temperature","humidity"],"sources":["/Users/adam/Iotproject/src/contents/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Dashboard = () => {\n  const [sensorData, setSensorData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch('/api/sensor-data');\n      const data = await response.json();\n      setSensorData(data);\n      setIsLoading(false);\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      {isLoading ? (\n        <p>Loading sensor data...</p>\n      ) : (\n        <table>\n          <thead>\n            <tr>\n              <th>Sensor ID</th>\n              <th>Temperature</th>\n              <th>Humidity</th>\n            </tr>\n          </thead>\n          <tbody>\n            {sensorData.map(sensor => (\n              <tr key={sensor.id}>\n                <td>{sensor.id}</td>\n                <td>{sensor.temperature}</td>\n                <td>{sensor.humidity}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAEnD,MAAMC,SAAS,GAAG,MAAM;EAAA;EACtB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,MAAMM,SAAS,GAAG,YAAY;MAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAkB,CAAC;MAChD,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;MAClCP,aAAa,CAACM,IAAI,CAAC;MACnBJ,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC;IACDC,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAA,UACGF,SAAS,gBACR;MAAA,UAAG;IAAsB;MAAA;MAAA;MAAA;IAAA,QAAI,gBAE7B;MAAA,wBACE;QAAA,uBACE;UAAA,wBACE;YAAA,UAAI;UAAS;YAAA;YAAA;YAAA;UAAA,QAAK,eAClB;YAAA,UAAI;UAAW;YAAA;YAAA;YAAA;UAAA,QAAK,eACpB;YAAA,UAAI;UAAQ;YAAA;YAAA;YAAA;UAAA,QAAK;QAAA;UAAA;UAAA;UAAA;QAAA;MACd;QAAA;QAAA;QAAA;MAAA,QACC,eACR;QAAA,UACGF,UAAU,CAACS,GAAG,CAACC,MAAM,iBACpB;UAAA,wBACE;YAAA,UAAKA,MAAM,CAACC;UAAE;YAAA;YAAA;YAAA;UAAA,QAAM,eACpB;YAAA,UAAKD,MAAM,CAACE;UAAW;YAAA;YAAA;YAAA;UAAA,QAAM,eAC7B;YAAA,UAAKF,MAAM,CAACG;UAAQ;YAAA;YAAA;YAAA;UAAA,QAAM;QAAA,GAHnBH,MAAM,CAACC,EAAE;UAAA;UAAA;UAAA;QAAA,QAKnB;MAAC;QAAA;QAAA;QAAA;MAAA,QACI;IAAA;MAAA;MAAA;MAAA;IAAA;EAEX;IAAA;IAAA;IAAA;EAAA,QACG;AAEV,CAAC;AAAC,GAxCIZ,SAAS;AAAA,KAATA,SAAS;AA0Cf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}